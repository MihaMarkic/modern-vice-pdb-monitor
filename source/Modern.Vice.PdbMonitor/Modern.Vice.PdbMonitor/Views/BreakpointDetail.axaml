<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ae="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
             xmlns:v="clr-namespace:Modern.Vice.PdbMonitor.Views"
             xmlns:brb="clr-namespace:Modern.Vice.PdbMonitor.Views.BreakpointsBinding"
             xmlns:c="clr-namespace:Modern.Vice.PdbMonitor.Converters"
             xmlns:ctl="clr-namespace:Modern.Vice.PdbMonitor.Controls"
             xmlns:vm="clr-namespace:Modern.Vice.PdbMonitor.Engine.ViewModels;assembly=Modern.Vice.PdbMonitor.Engine"
             xmlns:m="clr-namespace:Modern.Vice.PdbMonitor.Engine.Models;assembly=Modern.Vice.PdbMonitor.Engine"
             xmlns:b="clr-namespace:Modern.Vice.PdbMonitor.Behaviors"
             xmlns:i="using:Avalonia.Xaml.Interactivity"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="350" MinWidth="500"
             Name="control"
             x:DataType="vm:BreakpointDetailViewModel"
             x:Class="Modern.Vice.PdbMonitor.Views.BreakpointDetail">
  <Grid Margin="8" ColumnDefinitions="Auto,*" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,*,Auto,Auto,Auto"
    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
    <Grid.Styles>
      <Style Selector="Label">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,10,4,10" />
      </Style>
      <Style Selector="TextBox">
        <Setter Property="VerticalAlignment" Value="Center" />
      </Style>
      <Style Selector="ComboBox">
        <Setter Property="VerticalAlignment" Value="Center" />
      </Style>
    </Grid.Styles>
    <Grid.Resources>
      <c:BreakpointAddressRangesToStringConverter x:Key="BreakpointAddressRangesToStringConverter" />
    </Grid.Resources>
    <CheckBox Grid.Column="1" IsChecked="{Binding Breakpoint.IsEnabled, Mode=TwoWay}">Is enabled</CheckBox>
    <CheckBox Grid.Column="2" Grid.Row="1" IsChecked="{Binding Breakpoint.StopWhenHit, Mode=TwoWay}">Stop when hit</CheckBox>

    <Label Grid.Column="0" Grid.Row="2">Addresses</Label>
    <!--<StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal">
      <TextBox Text="{Binding StartAddress}" Width="100" IsEnabled="{Binding !IsStartAddressReadOnly}" />
      <Label Margin="4,0">end</Label>
      <TextBox Text="{Binding EndAddress}" Width="100" IsEnabled="{Binding !IsEndAddressReadOnly}" />
    </StackPanel>-->
    <Grid Grid.Column="1" Grid.Row="2" VerticalAlignment="Center">
      <TextBlock IsVisible="{Binding IsAddressRangeReadOnly}"
        Text="{Binding Breakpoint.AddressRanges, Converter={StaticResource BreakpointAddressRangesToStringConverter}}" />
      <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsAddressRangeReadOnly}">
        <TextBox Text="{Binding StartAddress}" Width="100" />
        <Label Margin="4,0">end</Label>
        <TextBox Text="{Binding EndAddress}" Width="100" />
      </StackPanel>
    </Grid>

    <Label Grid.Column="0" Grid.Row="3">Mode</Label>
    <!--<ComboBox Grid.Column="1" Grid.Row="3"
      IsEnabled="{Binding IsModeEnabled, Mode=OneWay}"
      SelectedIndex="{Binding Breakpoint.Mode, Mode=TwoWay}" 
      Width="100" HorizontalAlignment="Left">
      <ComboBoxItem>Exec</ComboBoxItem>
      <ComboBoxItem>Load</ComboBoxItem>
      <ComboBoxItem>Store</ComboBoxItem>
    </ComboBox>-->
    <brb:BreakpointExecutionMode Grid.Column="1" Grid.Row="3" 
      Mode="{Binding Breakpoint.Mode, Mode=TwoWay}"
      IsExecEnabled="{Binding IsExecModeEnabled}"
      IsLoadEnabled="{Binding IsLoadStoreModeEnabled}"
      IsStoreEnabled="{Binding IsLoadStoreModeEnabled}"/>

    <Label Grid.Row="5" VerticalAlignment="Top" Margin="0,4,4,10">Binding</Label>
    <StackPanel Grid.Column="1" Grid.Row="5" Orientation="Vertical" VerticalAlignment="Center">
      <StackPanel Orientation="Horizontal">
        <TextBlock Text="{Binding Breakpoint.BindMode}" HorizontalAlignment="Left" VerticalAlignment="Center"
        FontWeight="Bold" />
        <Button Margin="10,0,4,0" Command="{Binding ClearBindingCommand}">Clear</Button>
        <TextBlock Margin="4,0" HorizontalAlignment="Left" VerticalAlignment="Center">or convert to</TextBlock>
        <!--<Button Margin="4,0">Label</Button>-->
        <Button Margin="4,0" Command="{Binding ConvertBindingToGlobalVariableCommand}">Global Variable</Button>
      </StackPanel>
      <ContentControl Content="{Binding Breakpoint.Bind}"
        IsVisible="{Binding Breakpoint.Bind, Converter={x:Static ObjectConverters.IsNotNull}}">
        <ContentControl.Resources>
          <c:PdbVariableAddressRangeToStringConverter x:Key="PdbVariableAddressRangeToStringConverter" />
        </ContentControl.Resources>
        <ContentControl.DataTemplates>
          <DataTemplate DataType="m:BreakpointLineBind">
            <brb:BreakpointLineBind />
          </DataTemplate>
          <DataTemplate DataType="m:BreakpointGlobalVariableBind">
            <!--<brb:BreakpointGlobalVariableBind GlobalVariables="{Binding #control.DataContext.GlobalVariables}"
              Variable="{Binding #control.DataContext.GlobalVariable}"/>-->
            <ComboBox Width="200" ItemsSource="{Binding #control.DataContext.GlobalVariables}"
              SelectedItem="{Binding #control.DataContext.GlobalVariable}">
              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" />
                    <TextBlock Margin="4,0,0,0" Foreground="Gray"
                      Text="{Binding Converter={StaticResource PdbVariableAddressRangeToStringConverter}}"/>
                  </StackPanel>
                </DataTemplate>
              </ComboBox.ItemTemplate>
            </ComboBox>
          </DataTemplate>
          <DataTemplate DataType="m:BreakpointNoBind" />
        </ContentControl.DataTemplates>
      </ContentControl>
    </StackPanel>

    <Label Grid.Column="0" Grid.Row="6">Condition</Label>
    <ae:TextEditor x:Name="Conditions" Grid.Column="1" Grid.Row="6" HorizontalAlignment="Stretch"
      Foreground="Gray" FontFamily="{StaticResource CodeFont}" MinHeight="60" ShowLineNumbers="true" Margin="0,5"
      FontSize="14">
      <i:Interaction.Behaviors>
        <b:DocumentTextBindingBehavior Text="{Binding Breakpoint.Condition, Mode=TwoWay}"/>
      </i:Interaction.Behaviors>
    </ae:TextEditor>

    <Label Grid.Column="0" Grid.Row="7">Config error</Label>
    <Grid Grid.Column="1" Grid.Row="7" VerticalAlignment="Center">
      <TextBlock Text="{Binding Breakpoint.ErrorText}" Foreground="DarkRed" IsVisible="{Binding Breakpoint.HasErrors}"/>
      <TextBlock Text="All good" IsVisible="{Binding !Breakpoint.HasErrors}"/>
    </Grid>

    <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="8" Classes="error" Text="{Binding SaveError}"
      IsVisible="{Binding SaveError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />

    <StackPanel  Grid.Column="1" Grid.Row="9" Orientation="Horizontal" HorizontalAlignment="Right"
      VerticalAlignment="Bottom" Margin="0,0,8,0">
      <Button Margin="0,0,8,0" IsVisible="{Binding HasSaveButton, Mode=OneTime}" Command="{Binding SaveCommand}">Save</Button>
      <Button Margin="0,0,8,0" IsVisible="{Binding HasCreateButton, Mode=OneTime}" Command="{Binding CreateCommand}">Create</Button>
      <Button Margin="0,0,8,0" Command="{Binding CancelCommand, Mode=OneTime}">Cancel</Button>
      <Button IsVisible="{Binding HasApplyButton, Mode=OneTime}">Apply</Button>
    </StackPanel>
  </Grid>
</UserControl>
